## Configuration file for fileAclAuthorizer

permissions:
    # admin role can do everything
    - role: admin
      predicate: path-prefix[path="/"]
      priority: 0
      mongo:
        allowManagementRequests: true # default false
        allowBulkPatch: true          # default false
        allowBulkDelete: true         # default false
        allowWriteMode: true          # default false

    # allow role 'user' access /{userid} with read and write filter, cannot use ?filter qparam
    - roles:
        - user
      predicate: path-template[value="/{userid}"] and equals[%u, "${userid}"]
      priority: 100
      mongo:
        readFilter: '{"status": "public"}'
        writeFilter: '{"status": "public"}'
        protectProps: ["status", "user"]
        overrideProps: {"status": '"public"', "user": "@user.userid"}
        forbidQueryParams: [ "filter" ]

        # allow role 'user' access /{username}/{doc} with read and write filter, cannot use ?filter qparam
    - roles:
        - user
      predicate: path-template[value="/{userid}/{subpath}"] and equals[%u, "${userid}"]
      priority: 100
      mongo:
        readFilter: '{"status": "public"}'
        writeFilter: '{"status": "public"}'
        protectProps: ["status", "user"]
        overrideProps: {"status": '"public"', "user": "@user.userid"}
        forbidQueryParams: [ "filter" ]