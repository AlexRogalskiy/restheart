# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build stable release

on:
  push:
    tags:
      - "*"

jobs:
  build:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-18.04
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1.1.2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Set the version and SHA
        id: vars
        run: |
          echo "::set-output name=VERSION::$(echo ${GITHUB_REF:10})"
          echo "::set-output name=SHA::$(echo ${GITHUB_SHA:0:7})"

      - name: Print the version and SHA
        run: |
          echo "VERSION=${{steps.vars.outputs.VERSION}}"
          echo "SHA=${{steps.vars.outputs.SHA}}"

      - name: Build and verify
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

      - name: Build and Push Docker image tagged with SHA
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker build --file ./core/Dockerfile -t softinstigate/restheart:${{steps.vars.outputs.SHA}} ./core/.
          docker push softinstigate/restheart:${{steps.vars.outputs.SHA}}

      - name: Push Docker image tagged with VERSION
        run: |
          docker tag softinstigate/restheart:${{steps.vars.outputs.SHA}} softinstigate/restheart:${{steps.vars.outputs.VERSION}}
          docker push softinstigate/restheart:${{steps.vars.outputs.VERSION}}

      - name: Build and Push distroless Docker image tagged with VERSION
        run: |
          docker build --file ./core/distroless.Dockerfile -t softinstigate/restheart:${{steps.vars.outputs.VERSION}}-distroless ./core/.
          docker push softinstigate/restheart:${{steps.vars.outputs.VERSION}}-distroless

      - name: Upload GitHub release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: |
            Release ${{ github.ref }}
          files: |
            core/target/restheart.tar.gz
            core/target/restheart.zip
            core/target/restheart.jar
          draft: true
          prerelease: false

      - name: Import private gpg key
        run: |
          printf "%s" "$GPG_PRIVATE_KEY" > private.key
          gpg --pinentry-mode=loopback --batch --yes --fast-import private.key
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Deploy to Maven Central
        run: mvn -B deploy -Pdeploy -DskipTests -s settings.xml
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          GPG_KEY_NAME: ${{ secrets.GPG_KEY_NAME }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
